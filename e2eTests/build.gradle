def e2eProjects = ["mockito-release-tools-example": "https://github.com/mockito/mockito-release-tools-example"]

task e2eTest {
    doFirst {
        e2eProjects.each { entry ->
            println "  E2E tests for $entry.key :)"
            def projectName = entry.key
            task e2eTest$projectName {
                deleteProjectDir(projectName)
                gitClone(projectName, e2eProjects[projectName])
                bumpProjectVersion(projectName)
                performRelease(projectName)
            }
        }
    }
}

def deleteProjectDir(String projectName) {
    tasks.create("deleteDir$projectName", Delete) {
        delete "$projectDir/$projectName"
    }.execute()
}

def gitClone(String projectName, String repoUrl) {
    tasks.create("gitClone$projectName", Exec) {
        commandLine 'git', 'clone', "$repoUrl", "$projectDir/$projectName"
    }.execute()
}

def bumpProjectVersion(String projectName) {
    ant.replaceregexp(
            match: "gradle\\.plugin\\.org\\.mockito:mockito-release-tools:(\\d+)?\\.(\\d+)?\\.(\\d+)?",
            replace: "gradle.plugin.org.mockito:mockito-release-tools:$project.version") {
        fileset(dir: "$projectDir/$projectName", includes: 'build.gradle gradle.properties')
    }
}

def performRelease(String projectName) {
    tasks.create("performRelease$projectName", Exec) {
        workingDir "$projectDir/$projectName"
        commandLine './gradlew', 'performRelease', '-Preleasing.dryRun'
    }.execute()
}

task check {
    dependsOn e2eTest
}

task build {
    dependsOn check
}
